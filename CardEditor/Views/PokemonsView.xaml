<UserControl x:Class="CardEditor.Views.PokemonsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:CardEditor.Views"
             xmlns:m="clr-namespace:CardEditor"
             xmlns:vm="clr-namespace:CardEditor.ViewModels"
             xmlns:en="clr-namespace:Entities;assembly=Entities"
             xmlns:tcg="clr-namespace:TCGCards;assembly=TCGCards"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type=vm:PokemonsViewModel, IsDesignTimeCreatable=True}"
             Background="White">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="boolToVisibility" />
        <m:BooleanToColorConverter x:Key="boolToColor" />
        <ObjectDataProvider x:Key="energyTypes" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="en:EnergyTypes"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="statusEffects" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="en:StatusEffect"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="discardModes" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="tcg:DiscardCostMode"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="30*"/>
            <ColumnDefinition Width="40*"/>
            <ColumnDefinition Width="30*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="50*" />
            <RowDefinition Height="50*" />
        </Grid.RowDefinitions>
        <DockPanel Grid.RowSpan="2" x:Name="groupPanel">
            <Button Content="Add Pokemon" DockPanel.Dock="Bottom" Margin="5" Command="{Binding AddPokemonCommand}"/>
            <Button Content="Import Pokemon" DockPanel.Dock="Bottom" Margin="5" Command="{Binding ImportPokemonCommand}"/>
            <Button Content="Import From set" DockPanel.Dock="Bottom" Margin="5" Command="{Binding ImportPokemonSetCommand}"/>
            <DockPanel DockPanel.Dock="Top" Margin="2">
                <Label Content="Set" DockPanel.Dock="Left"/>
                <ComboBox DockPanel.Dock="Left" ItemsSource="{Binding Sets}" SelectedItem="{Binding SelectedSet}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <Label Content="{Binding Name}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </DockPanel>
            <ListBox Margin="2" DockPanel.Dock="Top" ItemsSource="{Binding FilteredPokemonCards}" SelectedItem="{Binding SelectedCard}" SelectionMode="Single" HorizontalContentAlignment="Stretch">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <DockPanel>
                            <Label FontSize="18" FontWeight="Bold" Content="{Binding Card.Name}" Foreground="{Binding Card.Completed, Converter={StaticResource boolToColor}, Mode=TwoWay}" />
                            <Button HorizontalAlignment="Right" Content="&#xf1f8;" FontSize="20" FontFamily="{StaticResource FontAwesome}" Command="{Binding ElementName=groupPanel, Path=DataContext.DeleteSelectedPokemon}" CommandParameter="{Binding }" BorderThickness="0" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"/>
                        </DockPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </DockPanel>
        <DockPanel Grid.Column="1" DataContext="{Binding SelectedCard}" Margin="0,0,5,0" LastChildFill="False" x:Name="cardGroup">
            <DockPanel DockPanel.Dock="Top">
                <Label Content="Id" MinWidth="80"/>
                <TextBlock VerticalAlignment="Center" Text="{Binding Card.CardId, UpdateSourceTrigger=PropertyChanged}"/>
            </DockPanel>
            <DockPanel DockPanel.Dock="Top">
                <Label Content="Name" MinWidth="80"/>
                <TextBox Text="{Binding Card.Name, UpdateSourceTrigger=PropertyChanged}"/>
            </DockPanel>
            <DockPanel DockPanel.Dock="Top">
                <Label Content="Pkmn Name" MinWidth="80"/>
                <TextBox Text="{Binding Card.PokemonName, UpdateSourceTrigger=PropertyChanged}"/>
            </DockPanel>
            <DockPanel DockPanel.Dock="Top">
                <Label Content="ImageUrl" MinWidth="80"/>
                <TextBox Text="{Binding Card.ImageUrl}"/>
            </DockPanel>
            <DockPanel DockPanel.Dock="Top">
                <Label Content="HP" MinWidth="80"/>
                <TextBox Text="{Binding Card.Hp}"/>
            </DockPanel>
            <DockPanel DockPanel.Dock="Top">
                <Label Content="Stage" MinWidth="80"/>
                <TextBox Text="{Binding Card.Stage}"/>
            </DockPanel>
            <DockPanel DockPanel.Dock="Top">
                <Label Content="SetCode" MinWidth="80"/>
                <TextBox Text="{Binding Card.SetCode}"/>
            </DockPanel>
            <DockPanel DockPanel.Dock="Top">
                <Label Content="Type" MinWidth="80"/>
                <ComboBox ItemsSource="{Binding Source={StaticResource energyTypes}}" SelectedItem="{Binding Card.Type}"/>
            </DockPanel>
            <DockPanel DockPanel.Dock="Top">
                <Label Content="Resistance" MinWidth="80"/>
                <ComboBox ItemsSource="{Binding Source={StaticResource energyTypes}}" SelectedItem="{Binding Card.Resistance}"/>
            </DockPanel>
            <DockPanel DockPanel.Dock="Top">
                <Label Content="Amount" MinWidth="80"/>
                <TextBox Text="{Binding Card.ResistanceAmount}"/>
            </DockPanel>
            <DockPanel DockPanel.Dock="Top">
                <Label Content="Weakness" MinWidth="80"/>
                <ComboBox ItemsSource="{Binding Source={StaticResource energyTypes}}" SelectedItem="{Binding Card.Weakness}"/>
            </DockPanel>
            <DockPanel DockPanel.Dock="Top">
                <Label Content="Retreat Cost" MinWidth="80"/>
                <TextBox Text="{Binding Card.RetreatCost}" />
            </DockPanel>
            <DockPanel DockPanel.Dock="Top">
                <Label Content="Evolves From" MinWidth="80"/>
                <ComboBox ItemsSource="{Binding DataContext.AllPokemonNames, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" SelectedItem="{Binding Card.EvolvesFrom}"/>
            </DockPanel>
            <DockPanel DockPanel.Dock="Top">
                <Label Content="Evolves From" MinWidth="80"/>
                <TextBox Text="{Binding Card.EvolvesFrom}"/>
            </DockPanel>
            <DockPanel DockPanel.Dock="Top" LastChildFill="False">
                <Label Content="Completed" MinWidth="80"/>
                <CheckBox IsChecked="{Binding Card.Completed}" VerticalAlignment="Center" />
            </DockPanel>
        </DockPanel>
        <DockPanel Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="2" x:Name="pokemonAttackGroup" DataContext="{Binding SelectedCard}" LastChildFill="True" Margin="0,0,5,0">
            <TabControl>
                <TabItem Header="Attacks">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30*"/>
                            <ColumnDefinition Width="70*"/>
                        </Grid.ColumnDefinitions>
                        <DockPanel>
                            <Label Content="Attacks" DockPanel.Dock="Top" />
                            <Button Content="Add Attack" DockPanel.Dock="Bottom" Margin="5" Command="{Binding AddAttackCommand}" />
                            <Button Content="Copy Existing Attack" DockPanel.Dock="Bottom" Margin="5" Command="{Binding DataContext.CopyExistingAttackCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                            <ListBox Margin="5" ItemsSource="{Binding Card.Attacks}" SelectedItem="{Binding SelectedAttack}" x:Name="attackGroup" DockPanel.Dock="Top" SelectionMode="Single" HorizontalContentAlignment="Stretch">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <DockPanel LastChildFill="True">
                                            <Label Content="{Binding Name}" DockPanel.Dock="Left" />
                                            <Label Content="{Binding Damage}" DockPanel.Dock="Left"/>
                                            <Button HorizontalAlignment="Right" DockPanel.Dock="Right" Content="&#xf1f8;" FontSize="20" FontFamily="{StaticResource FontAwesome}" Command="{Binding ElementName=pokemonAttackGroup, Path=DataContext.DeleteSelectedAttack}" CommandParameter="{Binding }" BorderThickness="0" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"/>
                                            <Button HorizontalAlignment="Right" DockPanel.Dock="Right" Content="&#xf062;" FontSize="20" FontFamily="{StaticResource FontAwesome}" Command="{Binding ElementName=pokemonAttackGroup, Path=DataContext.MoveAttackUpCommand}" CommandParameter="{Binding }" BorderThickness="0" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"/>
                                            <Button HorizontalAlignment="Right" DockPanel.Dock="Right" Content="&#xf063;" FontSize="20" FontFamily="{StaticResource FontAwesome}" Command="{Binding ElementName=pokemonAttackGroup, Path=DataContext.MoveAttackDownCommand}" CommandParameter="{Binding }" BorderThickness="0" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"/>
                                        </DockPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </DockPanel>
                        <TabControl Grid.Column="2">
                            <TabItem Header="Attack Basic">
                                <DockPanel Grid.Column="1" LastChildFill="True" >
                                    <DockPanel DockPanel.Dock="Top">
                                        <Label Content="Selected Attack:" MinWidth="80"/>
                                        <Label Content="{Binding SelectedAttack.AttackType}" />
                                    </DockPanel>
                                    <DockPanel DockPanel.Dock="Top">
                                        <Label Content="Name" MinWidth="80"/>
                                        <TextBox Text="{Binding SelectedAttack.Name}"/>
                                    </DockPanel>
                                    <DockPanel DockPanel.Dock="Top">
                                        <Label Content="Description" MinWidth="80"/>
                                        <TextBox Text="{Binding SelectedAttack.Description}"/>
                                    </DockPanel>
                                    <DockPanel DockPanel.Dock="Top">
                                        <Label Content="Damage" MinWidth="80"/>
                                        <TextBox Text="{Binding SelectedAttack.Damage}"/>
                                    </DockPanel>
                                    <DockPanel DockPanel.Dock="Top">
                                        <Label Content="Apply Weakness" MinWidth="80"/>
                                        <CheckBox IsChecked="{Binding SelectedAttack.ApplyWeakness}" VerticalAlignment="Center"/>
                                    </DockPanel>
                                    <DockPanel DockPanel.Dock="Top">
                                        <Label Content="Apply Resistance" MinWidth="80"/>
                                        <CheckBox IsChecked="{Binding SelectedAttack.ApplyResistance}" VerticalAlignment="Center"/>
                                    </DockPanel>
                                    <DockPanel DockPanel.Dock="Top">
                                        <Label Content="Ignore Effects" MinWidth="80"/>
                                        <CheckBox IsChecked="{Binding SelectedAttack.IgnoreEffects}" VerticalAlignment="Center"/>
                                    </DockPanel>
                                    <DockPanel DockPanel.Dock="Top">
                                        <Label Content="Only use after" MinWidth="80"/>
                                        <TextBox Text="{Binding SelectedAttack.StoppedIfLastAttackName}"/>
                                    </DockPanel>
                                    <local:DynamicInputControl DataContext="{Binding SelectedAttack}">

                                    </local:DynamicInputControl>
                                </DockPanel>
                            </TabItem>
                            <TabItem Header="Costs">
                                <DockPanel>
                                    <DockPanel DockPanel.Dock="Top">
                                        <Label Content="Cost" DockPanel.Dock="Top" />
                                        <DataGrid Margin="5" ItemsSource="{Binding SelectedAttack.Cost}" CanUserAddRows="True" MinHeight="120" AutoGenerateColumns="False">
                                            <DataGrid.Columns>
                                                <DataGridComboBoxColumn Header="Type" Width="100" ItemsSource="{Binding Source={StaticResource energyTypes}}" SelectedValueBinding="{Binding EnergyType, Mode=TwoWay}"/>
                                                <DataGridTextColumn Header="Amount" Width="70" Binding="{Binding Amount}" />
                                            </DataGrid.Columns>
                                        </DataGrid>
                                    </DockPanel>
                                    <DockPanel DockPanel.Dock="Top">
                                        <Label Content="Discard for using attack" DockPanel.Dock="Top" />
                                        <DockPanel DockPanel.Dock="Top">
                                            <Label Content="Extra cost mode" MinWidth="80"/>
                                            <ComboBox ItemsSource="{Binding Source={StaticResource discardModes}}" SelectedItem="{Binding SelectedAttack.ExtraCostMode}"/>
                                        </DockPanel>
                                        <DataGrid Margin="5" ItemsSource="{Binding SelectedAttack.ExtraDiscardCost}" CanUserAddRows="True" MinHeight="120" AutoGenerateColumns="False">
                                            <DataGrid.Columns>
                                                <DataGridComboBoxColumn Header="Type" Width="100" ItemsSource="{Binding Source={StaticResource energyTypes}}" SelectedValueBinding="{Binding EnergyType, Mode=TwoWay}"/>
                                                <DataGridTextColumn Header="Amount" Width="70" Binding="{Binding Amount}" />
                                            </DataGrid.Columns>
                                        </DataGrid>
                                    </DockPanel>
                                </DockPanel>
                            </TabItem>
                            <TabItem Header="Attack Effects">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="40*" />
                                        <ColumnDefinition Width="60*" />
                                    </Grid.ColumnDefinitions>
                                    <DockPanel LastChildFill="True">
                                        <Button Content="Add Effect" DockPanel.Dock="Bottom" Command="{Binding AddEffectCommand}"/>
                                        <ListBox ItemsSource="{Binding SelectedAttack.Effects}" SelectedItem="{Binding SelectedEffect}" DockPanel.Dock="Top" HorizontalContentAlignment="Stretch">
                                            <ListBox.ItemTemplate>
                                                <DataTemplate>
                                                    <DockPanel>
                                                        <Label DockPanel.Dock="Left" Content="{Binding EffectType}" />
                                                        <Button HorizontalAlignment="Right" DockPanel.Dock="Right" Content="&#xf1f8;" FontSize="20" FontFamily="{StaticResource FontAwesome}" Command="{Binding ElementName=pokemonAttackGroup, Path=DataContext.DeleteSelectedEffect}" CommandParameter="{Binding }" BorderThickness="0" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"/>
                                                        <Button HorizontalAlignment="Right" DockPanel.Dock="Right" Content="&#xf062;" FontSize="20" FontFamily="{StaticResource FontAwesome}" Command="{Binding ElementName=pokemonAttackGroup, Path=DataContext.MoveEffectUpCommand}" CommandParameter="{Binding }" BorderThickness="0" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"/>
                                                        <Button HorizontalAlignment="Right" DockPanel.Dock="Right" Content="&#xf063;" FontSize="20" FontFamily="{StaticResource FontAwesome}" Command="{Binding ElementName=pokemonAttackGroup, Path=DataContext.MoveEffectDownCommand}" CommandParameter="{Binding }" BorderThickness="0" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"/>
                                                    </DockPanel>
                                                </DataTemplate>
                                            </ListBox.ItemTemplate>
                                        </ListBox>
                                    </DockPanel>
                                    <DockPanel Grid.Column="1" LastChildFill="True">
                                        <local:DynamicInputControl DataContext="{Binding SelectedEffect}">

                                        </local:DynamicInputControl>
                                    </DockPanel>
                                </Grid>
                            </TabItem>
                        </TabControl>
                    </Grid>
                </TabItem>
                <TabItem Header="Ability">
                    <DockPanel>
                        <Button Content="Set Ability" DockPanel.Dock="Top" Command="{Binding SetAbilityCommand}"/>
                        <local:AbilityView DataContext="{Binding Card.Ability}" />
                    </DockPanel>
                </TabItem>
            </TabControl>
        </DockPanel>
        <DockPanel Grid.Column="2">
            <Image Source="{Binding ImageSrc}" />
        </DockPanel>
    </Grid>
</UserControl>
